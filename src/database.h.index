/**
 * @file	object_database.h
 * @brief	Library for Database class
 * @author	Mattia Rizzini
 * @version	0.1.2
 * @date	2013-07-14
 */

#ifndef DATABASE_H__
#define DATABASE_H__

// Standard C++ libraries
#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <map>

// Custom header files
#include "object.h"

// OpenCV libraries
#include "opencv2/highgui/highgui.hpp"
#include "opencv2/features2d/features2d.hpp"
#include "opencv2/nonfree/nonfree.hpp"
#include "opencv2/flann/flann.hpp"

// Boost libraries
#include "boost/filesystem.hpp"
#include "boost/lambda/bind.hpp"
#include "boost/foreach.hpp"

extern bool debug;

namespace IStuff {
	//typedef std::string Label;

	class Database {
		private:
			std::string dbPath;
			std::string dbName;
			std::map< Label, cv::flann::Index > descriptorDB;

		public:
			Database( std::string, std::string = "image_sample/" );
			virtual ~Database();
			
			Object match( cv::Mat );

		private:
			void load();
			void build( std::string );
			void save();
	};

	class DBCreationException: public std::exception {
		public: virtual const char* what() const throw() {
			return "***Error in Database creation, no files in given directory or wrong path given***\n";
		}
	};

	class DBLoadingException: public std::exception {
		public: virtual const char* what() const throw() {
			return "***Error in Database loading, database seems to exist but files are missing***\n";
		}
	};
};

#endif
